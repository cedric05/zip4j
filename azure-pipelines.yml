# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master
- releases/*
pool:
  vmImage: 'ubuntu-latest'

steps:
- checkout: self
  persistCredentials: true
- bash: |
    echo VERSION=$(./gradlew properties -q | grep "version:" | awk '{print $2}')
    echo "##vso[task.setvariable variable=zip4jversion]$VERSION"
- task: Gradle@2
  inputs:
    workingDirectory: ''
    gradleWrapperFile: 'gradlew'
    gradleOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    tasks: 'build srcZip publish increment'
  env:
    TOKEN: $(github-publish-token)
- task: GithubRelease@0 
  displayName: 'Create GitHub Release'      
  inputs:
    gitHubConnection: cedric05
    repositoryName: cedric05/zip4j
    action: create
    tagSource: auto
    tag: $(zip4jversion)
    assets: |
      build/libs/*
      build/distributions/*
- script: |
    git config --global user.email "kesavarapu.siva@gmail.com"
    git config --global user.name "automated"
    git add build.gradle
    git commit -m "[skip ci]"
    git push origin master